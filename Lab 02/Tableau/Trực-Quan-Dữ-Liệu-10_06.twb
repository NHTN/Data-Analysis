<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CoronaData_20200610_HorseColic' inline='true' name='federated.1bn4pyl06q9y5316g0uor0fd6sgo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CoronaData_20200610_HorseColic' name='textscan.163m6101mcx5oz18s38aj1md17s8'>
            <connection class='textscan' directory='C:/Users/DELL/Desktop/Gitdemo/Data-Visualization/Lab 02/Data' filename='CoronaData_20200610_HorseColic.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.163m6101mcx5oz18s38aj1md17s8' name='CoronaData_20200610_HorseColic.csv' table='[CoronaData_20200610_HorseColic#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Ranking' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='integer' name='Total Cases' ordinal='3' />
            <column datatype='integer' name='New Cases' ordinal='4' />
            <column datatype='integer' name='Total Deaths' ordinal='5' />
            <column datatype='integer' name='New Deaths' ordinal='6' />
            <column datatype='integer' name='Total Recoverd' ordinal='7' />
            <column datatype='integer' name='Active Cases' ordinal='8' />
            <column datatype='integer' name='Serious Cases' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.163m6101mcx5oz18s38aj1md17s8' name='CoronaData_20200610_HorseColic.csv' table='[CoronaData_20200610_HorseColic#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Ranking' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='integer' name='Total Cases' ordinal='3' />
              <column datatype='integer' name='New Cases' ordinal='4' />
              <column datatype='integer' name='Total Deaths' ordinal='5' />
              <column datatype='integer' name='New Deaths' ordinal='6' />
              <column datatype='integer' name='Total Recoverd' ordinal='7' />
              <column datatype='integer' name='Active Cases' ordinal='8' />
              <column datatype='integer' name='Serious Cases' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.163m6101mcx5oz18s38aj1md17s8' name='Top10CoronaData_{}.csv' table='[Top10CoronaData_{}#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='integer' name='Ranking' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
              <column datatype='integer' name='Total Cases' ordinal='4' />
              <column datatype='integer' name='New Cases' ordinal='5' />
              <column datatype='integer' name='Total Deaths' ordinal='6' />
              <column datatype='integer' name='New Deaths' ordinal='7' />
              <column datatype='integer' name='Total Recoverd' ordinal='8' />
              <column datatype='integer' name='Active Cases' ordinal='9' />
              <column datatype='integer' name='Serious Cases' ordinal='10' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Active Cases (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[Active Cases]' />
          <map key='[Active Cases]' value='[CoronaData_20200610_HorseColic.csv].[Active Cases]' />
          <map key='[Country (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[Country]' />
          <map key='[Country]' value='[CoronaData_20200610_HorseColic.csv].[Country]' />
          <map key='[F1 (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[F1]' />
          <map key='[F1]' value='[CoronaData_20200610_HorseColic.csv].[F1]' />
          <map key='[New Cases (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[New Cases]' />
          <map key='[New Cases]' value='[CoronaData_20200610_HorseColic.csv].[New Cases]' />
          <map key='[New Deaths (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[New Deaths]' />
          <map key='[New Deaths]' value='[CoronaData_20200610_HorseColic.csv].[New Deaths]' />
          <map key='[Ranking (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[Ranking]' />
          <map key='[Ranking]' value='[CoronaData_20200610_HorseColic.csv].[Ranking]' />
          <map key='[Serious Cases (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[Serious Cases]' />
          <map key='[Serious Cases]' value='[CoronaData_20200610_HorseColic.csv].[Serious Cases]' />
          <map key='[Total Cases (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[Total Cases]' />
          <map key='[Total Cases]' value='[CoronaData_20200610_HorseColic.csv].[Total Cases]' />
          <map key='[Total Deaths (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[Total Deaths]' />
          <map key='[Total Deaths]' value='[CoronaData_20200610_HorseColic.csv].[Total Deaths]' />
          <map key='[Total Recoverd (Top10CoronaData_{}.csv)]' value='[Top10CoronaData_{}.csv].[Total Recoverd]' />
          <map key='[Total Recoverd]' value='[CoronaData_20200610_HorseColic.csv].[Total Recoverd]' />
          <map key='[Unnamed: 0]' value='[Top10CoronaData_{}.csv].[Unnamed: 0]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ranking</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ranking]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>Ranking</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recoverd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Recoverd]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>Total Recoverd</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious Cases]</local-name>
            <parent-name>[CoronaData_20200610_HorseColic.csv]</parent-name>
            <remote-alias>Serious Cases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ranking</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ranking (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Ranking</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Cases (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Deaths (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recoverd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Recoverd (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Total Recoverd</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active Cases (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious Cases (Top10CoronaData_{}.csv)]</local-name>
            <parent-name>[Top10CoronaData_{}.csv]</parent-name>
            <remote-alias>Serious Cases</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases (Top10CoronaData_{}.csv):qk]&quot;' value='Total Cases ' />
          <alias key='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Deaths (Top10CoronaData_{}.csv):qk]&quot;' value='Total Deaths ' />
          <alias key='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Recoverd (Top10CoronaData_{}.csv):qk]&quot;' value='Total Recoverd ' />
        </aliases>
      </column>
      <column caption='Active Cases (Top10CoronaData {}.csv)' datatype='integer' name='[Active Cases (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Active Cases]' role='measure' type='quantitative' />
      <column caption='Total Country' datatype='integer' name='[Calculation_707628158212304897]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ranking])' />
      </column>
      <column caption='Total Cases_World' datatype='integer' name='[Calculation_707628158212816898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Cases])' />
      </column>
      <column caption='Total Deaths_World' datatype='integer' name='[Calculation_707628158213218307]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Deaths])' />
      </column>
      <column caption='Total Recoverd_World' datatype='integer' name='[Calculation_707628158213369860]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Recoverd])' />
      </column>
      <column caption='Country (Top10CoronaData {}.csv)' datatype='string' name='[Country (Top10CoronaData_{}.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='F1 (Top10CoronaData {}.csv)' datatype='integer' name='[F1 (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='New Cases (Top10CoronaData {}.csv)' datatype='integer' name='[New Cases (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[New Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[New Cases]' peg='0' size='4901' />
      </column>
      <column datatype='integer' name='[New Cases]' role='measure' type='quantitative' />
      <column caption='New Deaths (Top10CoronaData {}.csv)' datatype='integer' name='[New Deaths (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[New Deaths (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[New Deaths]' peg='0' size='257' />
      </column>
      <column datatype='integer' name='[New Deaths]' role='measure' type='quantitative' />
      <column caption='Ranking (Top10CoronaData {}.csv)' datatype='integer' name='[Ranking (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column caption='Serious Cases (Top10CoronaData {}.csv)' datatype='integer' name='[Serious Cases (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Serious Cases]' role='measure' type='quantitative' />
      <column caption='Total Cases (Top10CoronaData {}.csv)' datatype='integer' name='[Total Cases (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths (Top10CoronaData {}.csv)' datatype='integer' name='[Total Deaths (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
      <column caption='Total Recoverd (Top10CoronaData {}.csv)' datatype='integer' name='[Total Recoverd (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Unnamed: 0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CoronaData_20200610_HorseColic.csv' datatype='table' name='[__tableau_internal_object_id__].[CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Top10CoronaData_{}.csv' datatype='table' name='[__tableau_internal_object_id__].[Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB]' role='measure' type='quantitative' />
      <column-instance column='[Active Cases]' derivation='Avg' name='[diff:avg:Active Cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Active Cases]' derivation='Sum' name='[diff:sum:Active Cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Active Cases]' derivation='Sum' name='[diff:sum:Active Cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Country (Top10CoronaData_{}.csv)]' derivation='None' name='[none:Country (Top10CoronaData_{}.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Active Cases]' derivation='Sum' name='[sum:Active Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:New Cases (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:New Deaths (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Serious Cases]' derivation='Sum' name='[sum:Serious Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cases (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:Total Cases (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:Total Deaths (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Recoverd (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:Total Recoverd (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='224' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Country (Top10CoronaData_{}.csv):nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (Top10CoronaData_{}.csv):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases (Top10CoronaData_{}.csv):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]&quot;</bucket>
            </map>
            <map to='#55ff00'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Recoverd (Top10CoronaData_{}.csv):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Serious Cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[diff:avg:Active Cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[diff:sum:Active Cases:qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[diff:sum:Active Cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Active Cases:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Deaths (Top10CoronaData_{}.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Cases (Top10CoronaData_{}.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Deaths:qk]&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Deaths (Top10CoronaData_{}.csv):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CoronaData_20200610_HorseColic.csv' id='CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287'>
            <properties context=''>
              <relation connection='textscan.163m6101mcx5oz18s38aj1md17s8' name='CoronaData_20200610_HorseColic.csv' table='[CoronaData_20200610_HorseColic#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Ranking' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='integer' name='Total Cases' ordinal='3' />
                  <column datatype='integer' name='New Cases' ordinal='4' />
                  <column datatype='integer' name='Total Deaths' ordinal='5' />
                  <column datatype='integer' name='New Deaths' ordinal='6' />
                  <column datatype='integer' name='Total Recoverd' ordinal='7' />
                  <column datatype='integer' name='Active Cases' ordinal='8' />
                  <column datatype='integer' name='Serious Cases' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Top10CoronaData_{}.csv' id='Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB'>
            <properties context=''>
              <relation connection='textscan.163m6101mcx5oz18s38aj1md17s8' name='Top10CoronaData_{}.csv' table='[Top10CoronaData_{}#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='integer' name='Ranking' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                  <column datatype='integer' name='Total Cases' ordinal='4' />
                  <column datatype='integer' name='New Cases' ordinal='5' />
                  <column datatype='integer' name='Total Deaths' ordinal='6' />
                  <column datatype='integer' name='New Deaths' ordinal='7' />
                  <column datatype='integer' name='Total Recoverd' ordinal='8' />
                  <column datatype='integer' name='Active Cases' ordinal='9' />
                  <column datatype='integer' name='Serious Cases' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Top10CoronaData_{}.csv)]' />
            </expression>
            <first-end-point object-id='CoronaData_20200610_HorseColic.csv_16694C4CEDC44915993BC1AFB594E287' />
            <second-end-point object-id='Top10CoronaData_{}.csv_BD7980C73DC04D65B818DF88C98F14BB' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Map_NewCase'>
      <table>
        <view>
          <datasources>
            <datasource caption='CoronaData_20200610_HorseColic' name='federated.1bn4pyl06q9y5316g0uor0fd6sgo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bn4pyl06q9y5316g0uor0fd6sgo'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Longitude (generated)]' field-type='quantitative' max='30093980.338935558' min='-18119620.548827492' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Latitude (generated)]' field-type='quantitative' max='17134933.538371034' min='-10687464.866401395' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Cases:qk]' field-type='quantitative' max-size='1' min-size='0.00407695' type='rangesize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e15759' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Cases:qk]' value='Số Ca Nhiễm Mới&#10;' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]' />
              <size column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.4528148174285889' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Latitude (generated)]</rows>
        <cols>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8E6D08E5-E70A-42AF-B029-D30B5FE675D5}' />
    </worksheet>
    <worksheet name='Map_TotalCases'>
      <table>
        <view>
          <datasources>
            <datasource caption='CoronaData_20200610_HorseColic' name='federated.1bn4pyl06q9y5316g0uor0fd6sgo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bn4pyl06q9y5316g0uor0fd6sgo'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Latitude (generated)]</column>
            <column>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Longitude (generated)]' field-type='quantitative' max='24410367.067403547' min='-24138962.254105639' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Latitude (generated)]' field-type='quantitative' max='17268589.691219795' min='-10687682.631731933' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]' field-type='quantitative' max-size='1' min='0' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]' min='1' num-steps='18' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]' />
              <color column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]' />
              <geometry column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Quốc Gia:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Tổng Ca Mất:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.0641851425170898' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Latitude (generated)]</rows>
        <cols>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{76B2393F-ACE2-4B6F-B5B8-B611FA810B2C}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='CoronaData_20200610_HorseColic' name='federated.1bn4pyl06q9y5316g0uor0fd6sgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1bn4pyl06q9y5316g0uor0fd6sgo'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Serious Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Serious Cases]' derivation='Sum' name='[sum:Serious Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Serious Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:F1:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Serious Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Total:&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</column>
            <column>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Serious Cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C0F9557D-2462-4151-900D-61C181AEE2AE}' />
    </worksheet>
    <worksheet name='Top10'>
      <table>
        <view>
          <datasources>
            <datasource caption='CoronaData_20200610_HorseColic' name='federated.1bn4pyl06q9y5316g0uor0fd6sgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1bn4pyl06q9y5316g0uor0fd6sgo'>
            <column caption='Country (Top10CoronaData {}.csv)' datatype='string' name='[Country (Top10CoronaData_{}.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases (Top10CoronaData {}.csv)' datatype='integer' name='[Total Cases (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
            <column caption='Total Deaths (Top10CoronaData {}.csv)' datatype='integer' name='[Total Deaths (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
            <column caption='Total Recoverd (Top10CoronaData {}.csv)' datatype='integer' name='[Total Recoverd (Top10CoronaData_{}.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Country (Top10CoronaData_{}.csv)]' derivation='None' name='[none:Country (Top10CoronaData_{}.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:Total Cases (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:Total Deaths (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Recoverd (Top10CoronaData_{}.csv)]' derivation='Sum' name='[sum:Total Recoverd (Top10CoronaData_{}.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases (Top10CoronaData_{}.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Deaths (Top10CoronaData_{}.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Recoverd (Top10CoronaData_{}.csv):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country (Top10CoronaData_{}.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;USA&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;UK&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Multiple Values]</rows>
        <cols>([federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country (Top10CoronaData_{}.csv):nk] / [federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{F2EDADD4-A134-4EE3-86EB-52A3BE528C52}' />
    </worksheet>
    <worksheet name='Tổng quan'>
      <table>
        <view>
          <datasources>
            <datasource caption='CoronaData_20200610_HorseColic' name='federated.1bn4pyl06q9y5316g0uor0fd6sgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1bn4pyl06q9y5316g0uor0fd6sgo'>
            <column caption='Total Country' datatype='integer' name='[Calculation_707628158212304897]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ranking])' />
            </column>
            <column caption='Total Cases_World' datatype='integer' name='[Calculation_707628158212816898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Cases])' />
            </column>
            <column caption='Total Deaths_World' datatype='integer' name='[Calculation_707628158213218307]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Deaths])' />
            </column>
            <column caption='Total Recoverd_World' datatype='integer' name='[Calculation_707628158213369860]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Recoverd])' />
            </column>
            <column datatype='integer' name='[Ranking]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Recoverd]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_707628158212304897]' derivation='User' name='[usr:Calculation_707628158212304897:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_707628158212816898]' derivation='User' name='[usr:Calculation_707628158212816898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_707628158213218307]' derivation='User' name='[usr:Calculation_707628158213218307:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_707628158213369860]' derivation='User' name='[usr:Calculation_707628158213369860:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158212304897:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158212816898:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158213218307:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158213369860:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158212304897:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158212816898:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158213218307:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[usr:Calculation_707628158213369860:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' value='137' />
            <format attr='height' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{33C0B2AC-3525-4F82-9F21-EC1BD9CEA2CB}' />
    </worksheet>
    <worksheet name='World_Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='CoronaData_20200610_HorseColic' name='federated.1bn4pyl06q9y5316g0uor0fd6sgo' />
          </datasources>
          <datasource-dependencies datasource='federated.1bn4pyl06q9y5316g0uor0fd6sgo'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Total:&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]' />
              <text column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]' />
              <lod column='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Deaths:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Quốc Gia:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Tổng ca mất:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Tổng ca chết:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Deaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#606b76' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='150' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9626AA77-0611-44F5-A1FF-B552A35AF51B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Tổng quan'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B039AE01-FFD2-45B6-B114-217AC9B5A2AD}' />
    </window>
    <window class='worksheet' name='Map_TotalCases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='35'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Total Cases:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{02C25444-EC1D-4B35-869B-87E23259C8EF}' />
    </window>
    <window class='worksheet' maximized='true' name='Map_NewCase'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8BC70E9F-D70C-4CE7-8E21-49C8274B5F0F}' />
    </window>
    <window class='worksheet' name='Top10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country (Top10CoronaData_{}.csv):nk]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Active Cases:ok]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Deaths:ok]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:New Deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B380F79-01E2-45EA-A5F3-17E4C8C8CAF1}' />
    </window>
    <window class='worksheet' name='World_Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:New Cases (bin):qk]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:New Deaths (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26D931C6-A1A0-4BE2-AE71-654D2125E64C}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[:Measure Names]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[none:Country:nk]</field>
            <field>[federated.1bn4pyl06q9y5316g0uor0fd6sgo].[sum:Serious Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5945477C-28CD-4AB6-A36B-410D6337FA55}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Map_NewCase' width='192'>
      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
      A8zTLetPOlj8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map_TotalCases' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='24' name='Sheet 6' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAAZ0lEQVRYhe3YsQmAAAwF0SjO4VzigOJcLhJXsBBekX91IMeRKkt3dw1m1QKaBNACmgTQ
      ApoE0AKaBNACmgTQAprxATYtUFX1HOenuf2+ft89/gISQAtoEkALaBJAC2gSQAtolulv8Re5
      CAspanrKjgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top10' width='192'>
      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
      0l32MxWSGYtNeabB9tpjdgt19ncSlmnoig8SdsNRKo1msaclvbfG50vrGOU0uYZFDS5nefx4
      jXQmz2G+2h4uiAwODYNSI53NtocDd7+6w85xhuPkvmX48eEeXy0n0EspynJ7GgSHj7HBGI1K
      jkyhbpHGIo+WviKRqXN4ZD3Q3l5bZidb4nBv2zI82NNHzC9xnEkjW/SBlr7+ip10nmOL7i7A
      0cE+S2vbKMUjKmp7WYsuP6MDURrlLJmiRVeykePRva/ZTtc5PG7346XsAvXE+pFklcYpzWpX
      MMx4r07dELE6Dt9Q6qTzFXyBCGG/xVSqw0t8aJxyoYTLaREuCPT0DiE1dAzLjW9QL2WpKCLR
      nm7L2QmPr4uZoRgNDKJW2ytcfoaGhtDqFVwOi1kg0yR9nEJy++iOtA8uAXp6YjiVBsW69faN
      QKCL2cEGVSQkq1t0mVSmgCcQIRK06Oo5XPQMTSDmyrjd1seud8cHkGSNhma9Otuo5Ck1TCLh
      SPsgHOju6cWhyFRk67o4GOxiql+hjmiZB1OTOc4WT/IQsCprDz1Dk4iZIm5Xb3uwpdX3hSGz
      kThm6uoNQGN9Y8fytt7BXo7rJrPRAB5Xu+NEhxMRg3pDRmrxmlzNkiqKXLt+HbmU4ahqVXAi
      ffFuRNlN4JQtJy6XA13XUFS97Z2Gw60NukYn+Sg+RGZ/E8FlYcMZJtrlxtHfjy9isbdHEHA6
      JPRaHb1156ehspU4YHx+ERGd9Q3rVqq7t5f9gsxErAu/16KoJRcSJo2GjNjiJ0MpkjhUmF+4
      jlorsp+zaCGAgf4YehEGPdYCcDmdGIaOomo01QOGwmYiyeTVawhn5CHW10uyrDITDeFzW9iQ
      nEiYlmWtNfLspQ2uLlxHqeY4KLS3QJerC6Q22Ds6xsAEw+TgMGl528rjFbYP9kkf7VKstg8A
      q5lt6u4BpsJ17u00z+Io5QzJQhXTFDCVGgdpqy6QzsN799jLFFnbWLdMw73761y5fo1Caqtt
      diKZPEBRdUCgXsyQtVqNru6x9DhBJpvm8bZF90Krs3FQYn5+lrXVh81huspe8uhkb4tpsn+K
      n7Y3Vlne2qWcOyBVaO8KGqUdMmaMubjBna1mPxi1HHu5CqYJptZgP2XdDbt/9x6HmSzrm9Z+
      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
      IhybH2vmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='83' name='Tổng quan' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World_Cases' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
